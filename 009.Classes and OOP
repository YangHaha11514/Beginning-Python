#类vs实例，类及实例的内建函数
#类属性vs实例属性
#类方法vs实例方法：创建、查看、调用、重构
#特殊方法：构造方法，一般的特殊方法；用特殊方法定制类
#多态、封装、继承



#类的创建：
class ClassName(bases):
    class_suite
#类属性
#类的方法：第一个参数必须为self，类不能直接调用方法，方法必须与实例绑定
#查看类属性：dir(ClassName),ClassName.__dict__ 
#特殊的类方法：C.__name__,C.__doc__,C.__bases__,C.__dict__,C.__module__,C.__class__
    
#实例化：1-初始化类mc=ClassName()，2-检测__init__方法
#构造器方法：__init__(),__new__()（标准类型的构造方法）;结构器：__del__()
class InstCt():
    count=0
    def __init__(self):
        InstCt.count+=1
    def __del__(self):
        InstCt.count-=1
    def howmany(self):
        return(InstCt.count)
#实例属性：__init__()中设置
#查看实例属性:dir();__dict__,var()
#特殊的实例方法：I.__class__;I.__dict__

#实例属性vs类属性
#类访问并更新类属性
#实例访问类属性（类属性不可变，类属性为词典等可变对象）

#实例属性只能通过类创建后，自定义实例属性？？？
#实例继承了所有的类属性，相当于copy了一份类属性，类属性与实例属性同名但不完全相同（背后的基础原理？？？）

#类MyClass及其实例mc,无法通过MyClass.foo()调用，可以mc.foo()调用。foo()方法绑定到了实例mc上
#调用非绑定方法：主要应用场景——派生子类，覆盖掉父类的构造方法，先调用父类的构造方法以重用代码
#可否用在覆盖普通的父类方法，先调用该父类方法以重用代码？？？？？

#组合；子类和派生
#重用基类的代码：调用未绑定的基类方法（普通方法或特殊方法-构造方法），或super()函数
class P(object):
    def __init__(self):
        print("Calling P's constructor")
    def foo(self):
        print("Hi,I'm P-foo")
        
class C(P):
    def __init__(self):
        P.__init__(self)#or super(C,self).__init__()
        print("Calling C's constructor")
    def foo(self):
        P.foo(self)#or super(C,self).foo()
        print("Hi,I'm C-foo")

#定制类
#1.从标准类中派生，或模拟标准类
#1.1.调用父类的构造方法
class RoundFloat(float):
    def __new__(cls,val):
        return(float.__new__(cls,round(val,2)))#or return(super(RoundFloat,cls).__new__(cls.round(val,2)))
#注意其中的构造函数为__new__(),及代表自身的关键词cls
#需要理解标准类的构造方法__new__()的定义及动作
#1.2.重写标准类的一般方法
class SortedKeyDict(dict):#重写dict的keys()方法
    def keys(self):
        return(sorted(super(SortedKeyDict,self).keys())#dict()创建词典的用法及各种方法，SortedKeyDict同样可以调用
#1.3.重写标准类的特殊方法
#实现序列或映射规则：__len__(self),__getitem__(self,key),__setitem__(self,key,value),__delitem__(self,key)
#1.4.迭代器规则：

#2.重载操作符






#多重继承，及其解析顺序？？？？？
    
#类、实例等内建函数：
#issubclass(sub,sup),isinstance(obj1,obj2)
#hasattr(),getattr(),setattr(),delattr()
#dir(),super(),var()





#静态方法和类方法？？？？？？？

